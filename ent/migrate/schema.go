// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DirectionsColumns holds the columns for the "directions" table.
	DirectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "start_station_id", Type: field.TypeInt64},
		{Name: "end_station_id", Type: field.TypeInt64},
		{Name: "created_at", Type: field.TypeTime},
	}
	// DirectionsTable holds the schema information for the "directions" table.
	DirectionsTable = &schema.Table{
		Name:       "directions",
		Columns:    DirectionsColumns,
		PrimaryKey: []*schema.Column{DirectionsColumns[0]},
	}
	// SchedulesColumns holds the columns for the "schedules" table.
	SchedulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "time", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "direction_id", Type: field.TypeInt64},
		{Name: "station_id", Type: field.TypeInt64},
	}
	// SchedulesTable holds the schema information for the "schedules" table.
	SchedulesTable = &schema.Table{
		Name:       "schedules",
		Columns:    SchedulesColumns,
		PrimaryKey: []*schema.Column{SchedulesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "schedules_directions_direction_schedules",
				Columns:    []*schema.Column{SchedulesColumns[3]},
				RefColumns: []*schema.Column{DirectionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "schedules_stations_station_schedules",
				Columns:    []*schema.Column{SchedulesColumns[4]},
				RefColumns: []*schema.Column{StationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "schedule_station_id_direction_id_time",
				Unique:  true,
				Columns: []*schema.Column{SchedulesColumns[4], SchedulesColumns[3], SchedulesColumns[1]},
				Annotation: &entsql.IndexAnnotation{
					DescColumns: map[string]bool{
						SchedulesColumns[3].Name: true,

						SchedulesColumns[4].Name: true,

						SchedulesColumns[1].Name: true,
					},
				},
			},
		},
	}
	// StationsColumns holds the columns for the "stations" table.
	StationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "latitude", Type: field.TypeFloat32, Nullable: true},
		{Name: "longitude", Type: field.TypeFloat32, Nullable: true},
		{Name: "is_end_station", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// StationsTable holds the schema information for the "stations" table.
	StationsTable = &schema.Table{
		Name:       "stations",
		Columns:    StationsColumns,
		PrimaryKey: []*schema.Column{StationsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "tg_id", Type: field.TypeInt64, Unique: true},
		{Name: "username", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "surname", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DirectionsTable,
		SchedulesTable,
		StationsTable,
		UsersTable,
	}
)

func init() {
	SchedulesTable.ForeignKeys[0].RefTable = DirectionsTable
	SchedulesTable.ForeignKeys[1].RefTable = StationsTable
}
